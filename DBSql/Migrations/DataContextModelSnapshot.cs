// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjecteV2.ApiSql;

#nullable disable

namespace DBSql.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArtistaGrup", b =>
                {
                    b.Property<string>("GrupsNomGrup")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("artistesNomArtista")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GrupsNomGrup", "artistesNomArtista");

                    b.HasIndex("artistesNomArtista");

                    b.ToTable("ArtistaGrup");
                });

            modelBuilder.Entity("CançoExtensio", b =>
                {
                    b.Property<string>("cançonsUID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("extensioNomExtensio")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("cançonsUID", "extensioNomExtensio");

                    b.HasIndex("extensioNomExtensio");

                    b.ToTable("CançoExtensio");
                });

            modelBuilder.Entity("CançoLlista", b =>
                {
                    b.Property<string>("cançonsUID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("llistaNom")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("llistaID_MAC")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("cançonsUID", "llistaNom", "llistaID_MAC");

                    b.HasIndex("llistaNom", "llistaID_MAC");

                    b.ToTable("CançoLlista");
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.Album", b =>
                {
                    b.Property<string>("NomAlbum")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime2");

                    b.Property<string>("ArtistaNom")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NomAlbum", "data", "ArtistaNom");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.Artista", b =>
                {
                    b.Property<string>("NomArtista")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AnyNaixement")
                        .HasColumnType("int");

                    b.HasKey("NomArtista");

                    b.ToTable("Artistes");
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.Canço", b =>
                {
                    b.Property<string>("UID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UID");

                    b.ToTable("Cançons");
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.Extensio", b =>
                {
                    b.Property<string>("NomExtensio")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NomExtensio");

                    b.ToTable("Extensio");
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.Grup", b =>
                {
                    b.Property<string>("NomGrup")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NomGrup");

                    b.ToTable("Grups");
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.Instrument", b =>
                {
                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Nom");

                    b.ToTable("Instrument");
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.Llista", b =>
                {
                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ID_MAC")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Dispositiu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Nom", "ID_MAC");

                    b.ToTable("Llista");
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.Participa", b =>
                {
                    b.Property<string>("UID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NomCanço")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NomArtista")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NomGrup")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NomInstrument")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UID", "NomCanço", "NomArtista", "NomGrup", "NomInstrument");

                    b.HasIndex("NomArtista");

                    b.HasIndex("NomCanço");

                    b.HasIndex("NomGrup");

                    b.HasIndex("NomInstrument");

                    b.ToTable("Participa");
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.conteAlbum", b =>
                {
                    b.Property<string>("UID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NomAlbum")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime2");

                    b.Property<string>("ArtistaNom")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UID", "NomAlbum", "data");

                    b.HasIndex("NomAlbum");

                    b.HasIndex("UID");

                    b.HasIndex("data");

                    b.HasIndex("NomAlbum", "data", "ArtistaNom");

                    b.ToTable("conteAlbum");
                });

            modelBuilder.Entity("ArtistaGrup", b =>
                {
                    b.HasOne("ProjecteV2.ApiSql.Grup", null)
                        .WithMany()
                        .HasForeignKey("GrupsNomGrup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjecteV2.ApiSql.Artista", null)
                        .WithMany()
                        .HasForeignKey("artistesNomArtista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CançoExtensio", b =>
                {
                    b.HasOne("ProjecteV2.ApiSql.Canço", null)
                        .WithMany()
                        .HasForeignKey("cançonsUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjecteV2.ApiSql.Extensio", null)
                        .WithMany()
                        .HasForeignKey("extensioNomExtensio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CançoLlista", b =>
                {
                    b.HasOne("ProjecteV2.ApiSql.Canço", null)
                        .WithMany()
                        .HasForeignKey("cançonsUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjecteV2.ApiSql.Llista", null)
                        .WithMany()
                        .HasForeignKey("llistaNom", "llistaID_MAC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.Participa", b =>
                {
                    b.HasOne("ProjecteV2.ApiSql.Artista", "ArtistaObj")
                        .WithMany("participa")
                        .HasForeignKey("NomArtista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjecteV2.ApiSql.Canço", "CançoObj")
                        .WithMany("participa")
                        .HasForeignKey("NomCanço")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjecteV2.ApiSql.Grup", "GrupObj")
                        .WithMany("participa")
                        .HasForeignKey("NomGrup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjecteV2.ApiSql.Instrument", "InstrumentObj")
                        .WithMany("participa")
                        .HasForeignKey("NomInstrument")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArtistaObj");

                    b.Navigation("CançoObj");

                    b.Navigation("GrupObj");

                    b.Navigation("InstrumentObj");
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.conteAlbum", b =>
                {
                    b.HasOne("ProjecteV2.ApiSql.Canço", "CançoObj")
                        .WithMany("conteAlbum")
                        .HasForeignKey("UID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjecteV2.ApiSql.Album", "AlbumObj")
                        .WithMany("conteAlbum")
                        .HasForeignKey("NomAlbum", "data", "ArtistaNom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlbumObj");

                    b.Navigation("CançoObj");
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.Album", b =>
                {
                    b.Navigation("conteAlbum");
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.Artista", b =>
                {
                    b.Navigation("participa");
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.Canço", b =>
                {
                    b.Navigation("conteAlbum");

                    b.Navigation("participa");
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.Grup", b =>
                {
                    b.Navigation("participa");
                });

            modelBuilder.Entity("ProjecteV2.ApiSql.Instrument", b =>
                {
                    b.Navigation("participa");
                });
#pragma warning restore 612, 618
        }
    }
}
